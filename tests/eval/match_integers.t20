;; Test
(: int-match (-> Int 1))
(define (int-match n)
  (let ([msg
         (match n
           [0 "zero"]
           [1 "one"]
           [2 "two"]
           ;; [3 "three"]
           ;; [4 "four"]
           ;; [5 "five"]
           ;; [6 "six"]
           ;; [7 "seven"]
           ;; [8 "eight"]
           ;; [9 "nine"]
           ;; [10 "ten"]
           [_ (if (int-less? n 0) "less than zero" "greater than 10")])])
    (print msg)))

(: main (-> 1 1))
(define (main _)
  (ignore
   (iterate 12
            (lambda (i)
              (let ([_ (if (int-eq? i 12) (int-match -1) (int-match i))])
                (+ i 1)))
            0)))
