#!/usr/bin/env bash
#
# Test script driver.
#

T20="./t20"
TESTS_DIR="tests"
FLAGS_FILE=".flags"
SUCCESSES=0
FAILURES=0
TICK=$(echo -ne '\x27\x14' | iconv -f utf-16be)
CROSS=$(echo -ne '\x27\x18' | iconv -f utf-16be)
export T20_COMPILER_ENABLE_ASSERTS=1

function runtests()
{
  local dir=$1
  local subdir=$2
  local expectation=$3
  local flags=
  if [[ -f "$dir/$subdir/$FLAGS_FILE" ]]; then
    flags=$(head -n 1 "$dir/$subdir/$FLAGS_FILE")
  fi
  echo -e "\033[1m== Running tests in $dir/$subdir ==\033[0m"
  for file in $(ls "$dir/$subdir" | grep "\.t20$"); do
    local stdout_log=$(mktemp)
    local stderr_log=$(mktemp)
    local test="$dir/$subdir/$file"

    local cmd="$T20 $flags $test > $stdout_log 2> $stderr_log"
    eval $cmd
    actual=$?

    if [[ $actual -eq $expectation ]]; then
      echo -e "\033[1;32m$TICK\033[0m $test"
      SUCCESSES=$(($SUCCESSES + 1))
    else
      FAILURES=$(($FAILURES + 1))
      echo -e "\033[1;31m$CROSS\033[0m $test"
      echo "command: $cmd"
      echo -n "stdout:"
      if [[ -s $stdout_log ]]; then
        echo ""
        cat $stdout_log | sed 's/^/    /'
      else
        echo " (empty)"
      fi
      echo -n "stderr:"
      if [[ -s $stderr_log  ]]; then
        echo ""
        cat $stderr_log | sed 's/^/    /'
      else
        echo " (empty)"
      fi
    fi

    rm -f $stdout_log
    rm -f $stderr_log
  done
}

for dir in $(ls -d $TESTS_DIR/*); do
  # Run pass and fail tests, if they exists.
  if [[ -d "$dir/pass" ]]; then
    runtests $dir "pass" 0
  fi

  if [[ -d "$dir/fail" ]]; then
    runtests $dir "fail" 10
  fi
done

echo -e "\033[1m== Summary ==\033[0m"
echo -e "# \033[1;32m$TICK\033[0m successes: $SUCCESSES"
echo -e "# \033[1;31m$CROSS\033[0m failures: $FAILURES\033[0m"

if [[ $FAILURES -ne 0 ]]; then
  exit 1
else
  exit 0
fi
