;; Some examples using finite iteration.

(: nth-power-of (-> Int Int Int))
(define (nth-power-of a n)
  (let ([f (lambda (_) (* a a))])
    (Prelude.iterate n f 1)))

(: fact (-> Int Int))
(define (fact n)
  (let* ([g (lambda ([, n f])
              (, [+ 1 n] [* f (+ 1 n)]))]
         [(, _ result) (Prelude.iterate n g (, 0 1))])
    result))

(: fib (-> Int Int))
(define (fib n)
  (let* ([g (lambda ([, a b])
              (, b (+ a b)))]
         [(, result _) (Prelude.iterate n g (, 0 1))])
    result))
